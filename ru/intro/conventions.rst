Соглашения CakePHP
##################

Мы являемся большими поклонниками принципа "соглашения превыше конфигурации".
Несмотря на то, что изучение соглашений CakePHP занимает какое-то врем, их знание
сэкономит Вам огромное количество времени в будущем. Следуя соглашениям, Вы 
получаете готовую функциональность без необходимости написания дополнительных
настрооек. Также соглашения упрощают процесс совместной разработки, позволяя без
особых проблем другим разработчикам присоединиться к Вашему проекту, не вникая во
все тонкости его реализации.

Соглашения контроллера
======================

Имена классов контроллера обычно пишутся во множественном числе, c использованием
ВерблюжьегоРегистра и оканчиваются на слово ``Controller``. К примеру такие имена,
как ``UsersController`` и ``ArticleCategoriesController`` хорошо соответствуют
соглашениям.

Публичные методы Контроллеров часто становятся так называемыми 'экшенами',
доступными через веб-браузер. К примеру такая часть URL-адреса ``/users/view``
по умолчанию соответствует методу ``view()`` контроллера ``UsersController``.
Защищенные (protected) или закрытые (private) методы не доступны системе роутинга.

URL-адреса и имена котроллеров
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Как Вы только что видели, контроллеры с названием из одного слова связываются с 
соответствующим путем URL в нижнем регистре. К примеру ``UsersController`` 
(объявленный в файле **UsersController.php**) доступен в виде следующего адреса
http://example.com/users.

В то время как Вы можете маршрутизировать контроллеры из нескольких слов как
Вам угодно, в соответствиии с соглашениями Ваши URL-адреса должны быть в нижнем
регистре разделенные дефисами с использованием класса ``DashedRoute``, cледовательно
``/article-categories/view-all`` это корректная форрма обращения к экшену
``ArticleCategoriesController::viewAll()``.

Когда Вы создаете ссылки с использованием  метода ``this->Html->link()``, Вы можете
пользоваться следующими соглашениями для массива url::

    $this->Html->link('текст-ссылки', [
        'prefix' => 'MyPrefix' // ВерблюжийРегистр
        'plugin' => 'MyPlugin', // ВерблюжийРегистр
        'controller' => 'ControllerName', // ВерблюжийРегистр
        'action' => 'actionName' // верблюжийРегистр
    ]

Для большей информации о URL-адресаах CakePHP и обработке параметров, смотрите
:ref:`routes-configuration`.

.. _file-and-classname-conventions:

Соглашения об именах классов и файлов
=====================================

В общих чертах, имена файлов должны совпадать с именами классов, и следовать
стандартам автозагрузки PSR-0 или PSR-4. Вот некоторые примеры имен классов и
их файлов:

-  Класс контроллера ``LatestArticlesController`` может быть найден в файле с
   именем **LatestArticlesController.php**
-  Класс компонента ``MyHandyComponent`` может быть найден в файле с
   именем **MyHandyComponent.php**
-  Класс таблицы ``OptionValuesTable`` может быть найден в файле с
   именем **OptionValuesTable.php**.
-  Класс объекта данных ``OptionValue`` может быть найден в файле с
   именем **OptionValue.php**.
-  Класс поведения ``EspeciallyFunkableBehavior`` может быть найден в файле с
   именем **EspeciallyFunkableBehavior.php**
-  Класс вида ``SuperSimpleView`` может быть найден в файле с
   именем **SuperSimpleView.php**
-  Класс хелпера ``BestEverHelper`` может быть найден в файле с
   именем **BestEverHelper.php**

Каждый файл может быть найден в соответствующей папке/пространстве имен в папке
вашего приложения.

.. _model-and-database-conventions:

Соглашения модели и базы данных
===============================

.. meta::
    :title lang=ru: Соглашения CakePHP
    :keywords lang=ru: web development experience,maintenance nightmare,index method,legacy systems,method names,php class,uniform system,config files,tenets,articles,conventions,conventional controller,best practices,maps,visibility,news articles,functionality,logic,cakephp,developers
