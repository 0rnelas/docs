Руководство по миграции 3.0
###########################

Эта страница обобщает изменения относительно CakePHP 2.x, что поможет вам
безболезненно перевести ваши проекты на версию 3.0, а также руководство по
изменениям, внесенным в ядро в сравнении с веткой CakePHP 2.x. Убедительно
просим прочитать остальные сраницы в этом руководстве для ознакомления со всеми
нововведениями и изменениями в API.

Системные требования
====================

- CakePHP 3.x поддерживает PHP версии 5.4.16 и выше.
- CakePHP 3.x требует наличия расширения mbstring.
- CakePHP 3.x требует наличия расширения intl.

.. warning::

    CakePHP 3.0 не будет работать если вышеприведенные условия не будут соблюдены.
    
Инструментарий обновления
=========================

В то время, как этот документ охватывает все радикальные изменения и улучшения
сделанные в CakePHP 3.0, мы также создали консольное приложение для того,
чтобы помочь вам совершить некоторые рутинные операции при обновлении.
Вы можете `получить инструментарий обновления с github
<https://github.com/cakephp/upgrade>`_.

Структура папок приложения
============================

Структура папок приложения притерпела изменения и теперь соответствует
стандарту `PSR-4 <http://www.php-fig.org/psr/psr-4/>`_. Вы должны использовать
в качестве примера проект 
`каркаса приложения <https://github.com/cakephp/app>`_ при обновлении вашего
приложения.

CakePHP должен устанавливаться с помощью Composer
=================================================

С того момента, как CakePHP больше не может устанавливаться через PEAR или в
общую папку, данные опции больше не поддерживаются. Вместо этого вы должны
использовать `Composer <http://getcomposer.org>`_ для установки  CakePHP.

Пространства имен
=================

Все классы ядра CakePHP сейчас используют пространства имен и следуют
спецификациям автозагрузки PSR-4. К примеру **src/Cache/Cache.php** доступен
как ``Cake\Cache\Cache``. Глобальные константы и методы-хелперы, такие как
:php:meth:`__()` и :php:meth:`debug()` не используют пространства имен,
чтобы ими было удобнее пользоваться.
