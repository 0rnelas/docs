Пример создания блога
#####################

Это руководство проведет Вас через процесс создания простого блога. Мы
установим CakePHP, создадим базу данных, построим всю логику приложения -
вывод записей, добавление, удаление и редактирование записи.

Вот что Вам понадобится для этого:

#. Веб-сервер. Мы предполагаем, что Вы используете Apache, по мере
   ознакомления с инструкциями использование других веб-серверов будет
   весьма схоже. Нам возможно придется поработать немного с настройками
   сервера, но большинство пользователей могут начать работать с CakePHP
   без необходимости изменять какие-либо параметры. Убедитесь, что Вы
   используете версию PHP не ниже 5.5.9, и что расширения ``mbstring`` и
   ``intl`` включены в PHP.
#. Сервер БД. Мы собираемся использовать в этом руководстве сервер MySQL.
   Вы должны знать достаточно об SQL, чтобы суметь создать базу данных:
   в остальном можно положиться на CakePHP.
   Поскольку мы используем MySQL, убедитесь также, что  у Вас включено
   расширение ``pdo_mysql`` в PHP.
#. Базовые знания PHP.

Давайте приступим!

Получение CakePHP
=================

Простейший путь установить CakePHP - это использование Composer. С помощью
Composer Вы с легкостью установите фреймворк через командную строку или
терминал. Сначала скачайте и установите Composer если у Вас его еще нет.
Если у Вас установлен cURL, можете использовать следующую команду::

    curl -s https://getcomposer.org/installer | php
    
Или Вы можете скачать ``composer.phar`` с
`веб-сайта Composer <https://getcomposer.org/download/>`_.

Затем просто набрать следующую строку в Вашем терминале из Вашей
установочной папки, чтобы создать скелет приложения в ней. Для этого
примера мы будем использовать папку "blog" но Вы можете назвать ее так,
как Вам будет удобно.::

    php composer.phar create-project --prefer-dist cakephp/app blog
    
В том случае, если Composer установлен глобально, можно ввести следующее::

    composer self-update && composer create-project --prefer-dist cakephp/app blog
    
Преимущество при использовании Composer заключается в том, что он
автоматически произведет все необходимые настройки по правам доступа и создаст
файл конфигурации приложения config/app.php для Вас.

Также существуют и другие способы установки, если Вас не устраивает Composer.
Проверьте раздел документации :doc:`/installation`, чтобы узнать больше.

Независимо от того, каким способом установки Вы решите воспользоваться,
по окончании процесса установки, структура папки Вашего приложения будет
выглядеть следующим образом::

    /cake_install
        /bin
        /config
        /logs
        /plugins
        /src
        /tests
        /tmp
        /vendor
        /webroot
        .editorconfig
        .gitignore
        .htaccess
        .travis.yml
        composer.json
        index.php
        phpunit.xml.dist
        README.md

Теперь настало самое подходящее время для ознакомления с файловой структурой
приложения: проверьте раздел документации
:doc:`/intro/cakephp-folder-structure`.

.. note::
    The documentation is not currently supported in Russian language for this
    page.

    Please feel free to send us a pull request on
    `Github <https://github.com/cakephp/docs>`_ or use the **Improve This Doc**
    button to directly propose your changes.

    You can refer to the english version in the select top menu to have
    information about this page's topic.

.. meta::
    :title lang=ru: Пример создания блога
    :keywords lang=ru: модель вид контроллер,объектно-ориентированное программирование,логика приложения,настройка каталогов,базовые знания,сервер баз данных,настройка сервера,reins,documentroot,readme,repository,веб-сервер,производительность,lib,sql,aim,cakephp,servers,apache,downloads
