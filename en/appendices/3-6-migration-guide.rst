3.6 Migration Guide
###################

CakePHP 3.6 is an API compatible upgrade from 3.5. This page outlines the
changes and improvements made in 3.6.

To upgrade to 3.6.x run the following composer command:

.. code-block:: bash

    php composer.phar require --update-with-dependencies "cakephp/cakephp:3.6.*"

Deprecations
============

The following is a list of deprecated methods, properties and behaviors. These
features will continue to function until 4.0.0 after which they will be removed.

* ``bin/cake orm_cache`` is now ``bin/cake schema_cache``.


Behavior Changes
================

The following changes are API compatible, but they represent minor variances in
behavior that may affect your application:

* ``Cake\Utility\Security::randomBytes()`` will now throw exceptions when
  a secure source of entropy cannot be found in PHP5.
* Tokens generated by ``SecurityComponent`` now include the user's session id,
  to prevent token reuse between users/sessions. This changes the value of
  security tokens and will cause forms created in earlier versions of CakePHP to
  fail validation in 3.6.
* ``Cake\Database\Query::page()`` now raises exceptions when page values are
  < 1.
* Pagination now allows sorting on multiple fields across all pages. Previously
  only the first page could be sorted by more than one column. Furthermore, sort
  conditions defined in the query string are *prepended* to the default order
  parameters now instead of fully replacing the default ordering.
* Shell classes will now throw exceptions when task classes cannot be found.
  Previously invalid tasks would be silently ignored.
* CakePHP internals now chain exceptions where possible, allowing root causes of
  errors to be exposed.

ORM
========

* ``EntityTrait::isEmpty()`` and ``EntityTrait::hasValue()`` were added.


Validation
==========

* ``Validation::compareFields()`` was added as a more flexible version of
  ``Validation::compareWith()``.
* ``Validator::sameAs()`` and ``Validator::notSameAs()`` were added to make it
  easier to check if a field is the same as/not the same as another field.
