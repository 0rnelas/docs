3.6 Migration Guide
###################

CakePHP 3.6 is an API compatible upgrade from 3.5. This page outlines the
changes and improvements made in 3.6.

To upgrade to 3.6.x run the following composer command:

.. code-block:: bash

    php composer.phar require --update-with-dependencies "cakephp/cakephp:3.6.*"

Deprecations
============

The following is a list of deprecated methods, properties and behaviors. These
features will continue to function until 4.0.0 after which they will be removed.

* ``bin/cake orm_cache`` is now ``bin/cake schema_cache``.
* ``Cake\Cache\Engine\ApcEngine`` has been renamed to
  ``Cake\Cache\Engine\ApcuEngine`` to better reflect the extension name.


Behavior Changes
================

The following changes are API compatible, but they represent minor variances in
behavior that may affect your application:

* ``Cake\Utility\Security::randomBytes()`` will now throw exceptions when
  a secure source of entropy cannot be found in PHP5.
* Tokens generated by ``SecurityComponent`` now include the user's session id,
  to prevent token reuse between users/sessions. This changes the value of
  security tokens and will cause forms created in earlier versions of CakePHP to
  fail validation in 3.6.
* ``Cake\Database\Query::page()`` now raises exceptions when page values are
  < 1.
* Pagination now allows sorting on multiple fields across all pages. Previously
  only the first page could be sorted by more than one column. Furthermore, sort
  conditions defined in the query string are *prepended* to the default order
  parameters now instead of fully replacing the default ordering.
* Shell classes will now throw exceptions when task classes cannot be found.
  Previously invalid tasks would be silently ignored.
* CakePHP internals now chain exceptions where possible, allowing root causes of
  errors to be exposed.
* MySQL connections now default to ``utf8mb4`` (4 byte unicode) as their
  encoding. If you want to continue using the old default of ``utf8``, set
  your application's datasource' encoding in ``config/app.php`` to 'utf8'.

Core
====

- ``getTypeName()`` was added to assist in getting correct class/type name when
  building more descriptive error messages.

Database
========

* ``Query::identifier()`` was added. This method makes it easier to create
  identifier expressions for use in complex queries.

Datasource
==========

* A new abstract type was added for ``binaryuuid``. In MySQL and SQLite,
  ``BINARY(16)`` will be used as the column type. While in SQLServer, and
  Postgres will use their native UUID types.


ORM
===

* ``EntityTrait::isEmpty()`` and ``EntityTrait::hasValue()`` were added.

Shell
=====

* The ``cake assets copy`` command now features an ``--overwrite`` option for
  overwriting plugin assets if they already exist in the application webroot.

Validation
==========

* ``Validation::compareFields()`` was added as a more flexible version of
  ``Validation::compareWith()``.
* ``Validator::notSameAs()`` was added to make it
  easier to check if a field is not the same as another field.
